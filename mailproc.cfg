; External Mail Processing Configuration
; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
;
; $Id$
;
; Overview
; ~~~~~~~~
;
; A "mail processor" can modify or reject any message (body or header)
; or the list of recipients (envelopes) for any SMTP-received mail.
;
; Each line of this file that doesn't begin with a semicolon (comment)
; is a mail processor command-line that will be run for every incoming
; SMTP mail message.
;
; These instructions are for the Synchronet Mail Server (mailsrvr.c)
; revision 1.298 and later.
;
; Command-line Specifiers
; ~~~~~~~~~~~~~~~~~~~~~~~
;
; Mail processor command-lines may use command-line specifiers (i.e. macros
; or variables) to represent dynamic information.
; 
; Command-line specifiers (macros/variables) available:
;
;     %m = mail message (header and body text) path/filename
;     %l = recipient list path/filename
;     %e = processing error path/filename (put error text in this file)
;
;     %h = sending SMTP server's host name
;     %i = sending SMTP server's IP address
;     %s = sender's name or e-mail address (e.g. "Rob Swindell")
;     %a = sender's e-mail address (e.g. "rob@somehost.com")
;
;     %u = authenticated user number (0=unauthenticated)
;
;     %! = Synchronet exec directory
;     %g = Synchronet temp directory
;     %j = Synchronet data directory
;     %k = Synchronet ctrl directory
;     %z = Synchronet text directory
;
;     %o = sysop name
;     %q = system QWK-ID
;     %v = Synchronet version
;     %? = platform
;     %% = percent symbol
;
; Rejecting/Ignoring Mail
; ~~~~~~~~~~~~~~~~~~~~~~~
; 
; If the mail processor deletes the mail message (%m) or recipient list (%l)
; files, the mail message will be silently ignored. The sending SMTP server
; will not receive any error or failure indication.
;
; If the mail processor creates a processing error (%e) file (1 or more bytes)
; the mail message will be rejected by the SMTP server with the error message
; contained in the processing error file and an SMTP error response of 554.
;
; Processing Error File
; ~~~~~~~~~~~~~~~~~~~~~
;
; If the processing error file (%e) is created by the mail processor, it may
; contain simple error text (one or more lines) or SMTP error codes (with
; proper SMTP mutli-line response formatting) if the default STMP error
; response (554) is not desirable.
;
; Mail Message Format
; ~~~~~~~~~~~~~~~~~~~
;
; The mail message file (%m) is a plain ASCII text file in RFC 821 format
; containing the full message header and body as received by the SMTP server.
;
; Recipient List Format
; ~~~~~~~~~~~~~~~~~~~~~
;
; The recipient list is an ini-formatted file with a separate ini section
; (e.g. "[#]") for each recipient envelope.
;
; Each section (recipient) supports the following keys:
;
; Recipient = original destination address
; RecipientExt = user record number, if addressed to a local user
; RecipientNetType = deliver-to network type (0=none, 4=QWK, 5=Internet)
; RecipientNetAddr = deliver-to network address
; 
; Example recipient entries:
;
; Example for a local mail recipient:
; [0]
; Recipient=rob@synchro.net
; RecipientExt=1
;
; Example for an externally-relayed mail recipient:
; [1]
; Recipient=rob@somewhere.org
; RecipientNetType=5
; RecipientNetAddr=rob@somewhere.org
;
; Example for a forwarded mail recipient:
; [2]
; Recipient="dr. seuss"@synchro.net
; RecipientExt=3
; RecipientNetType=5
; RecipientNetAddr=santakrooz@yahoo.com
;
; Example for a QWKnet-routed mail recipient:
; [3]
; Recipient=digital.man
; RecipientExt=1685
; RecipientNetType=4
; RecipientNetAddr=FREEBSD
;
; JavaScript Mail Processors
; ~~~~~~~~~~~~~~~~~~~~~~~~~~
;
; If a mail processor command-line begins with '?', the JavaScript module
; following the '?' (assumed to be located in the Synchronet EXEC directory)
; will be compiled and executed internally. Any command-line options
; included after the filename will be available to the script using the
; 'argv' array.
;
; You can still use the command-line specifiers to pass dynamic information
; to a JavaScript mail processor, but all the same information is more easily
; accessible by accessing built-in JavaScript objects/properties:
;
; The message text filename (%m) is available to JavaScript modules using 
; the global variable 'message_text_filename'.
;
; The recipient list filename (%l) is available to JavaScript modules using
; the global variable 'recipient_list_filename'.
;
; The processing error filename (%e) is available to JavaScript modules using
; the global variable 'processing_error_filename'.
;
; The sending SMTP server's host name (%h) is available to JavaScript modules
; using the 'client.host_name' property.
;
; The sending SMTP server's IP addrses (%i) is available to JavaScript modules
; using the 'client.ip_address' property.
;
; The sender's name (%s) and e-mail address (%a) are available to JavaScript
; modules using the 'sender_name' and 'sender_address' properties.
;
; See the example JavaScript mail processor (mailproc_example.js) in your
; Synchronet EXEC directory for more details.
;
; Mail Processing commands follow:
; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
;
; Hint: Remove semicolon to activate a mail processor command-line.
;
; echo This is a sample mail process command. >> %m
; grep -i penis %m > %e
; ?mailproc_example.js