#!/usr/bin/perl

use MIME::Decoder;

my %chars=(
"\x00", "B_00000000_B",
"\x80", "B_10000000_B",
"\x40", "B_01000000_B",
"\xc0", "B_11000000_B",
"\x20", "B_00100000_B",
"\xa0", "B_10100000_B",
"\x60", "B_01100000_B",
"\xe0", "B_11100000_B",
"\x10", "B_00010000_B",
"\x90", "B_10010000_B",
"\x50", "B_01010000_B",
"\xd0", "B_11010000_B",
"\x30", "B_00110000_B",
"\xb0", "B_10110000_B",
"\x70", "B_01110000_B",
"\xf0", "B_11110000_B",
"\x08", "B_00001000_B",
"\x88", "B_10001000_B",
"\x48", "B_01001000_B",
"\xc8", "B_11001000_B",
"\x28", "B_00101000_B",
"\xa8", "B_10101000_B",
"\x68", "B_01101000_B",
"\xe8", "B_11101000_B",
"\x18", "B_00011000_B",
"\x98", "B_10011000_B",
"\x58", "B_01011000_B",
"\xd8", "B_11011000_B",
"\x38", "B_00111000_B",
"\xb8", "B_10111000_B",
"\x78", "B_01111000_B",
"\xf8", "B_11111000_B",
"\x04", "B_00000100_B",
"\x84", "B_10000100_B",
"\x44", "B_01000100_B",
"\xc4", "B_11000100_B",
"\x24", "B_00100100_B",
"\xa4", "B_10100100_B",
"\x64", "B_01100100_B",
"\xe4", "B_11100100_B",
"\x14", "B_00010100_B",
"\x94", "B_10010100_B",
"\x54", "B_01010100_B",
"\xd4", "B_11010100_B",
"\x34", "B_00110100_B",
"\xb4", "B_10110100_B",
"\x74", "B_01110100_B",
"\xf4", "B_11110100_B",
"\x0c", "B_00001100_B",
"\x8c", "B_10001100_B",
"\x4c", "B_01001100_B",
"\xcc", "B_11001100_B",
"\x2c", "B_00101100_B",
"\xac", "B_10101100_B",
"\x6c", "B_01101100_B",
"\xec", "B_11101100_B",
"\x1c", "B_00011100_B",
"\x9c", "B_10011100_B",
"\x5c", "B_01011100_B",
"\xdc", "B_11011100_B",
"\x3c", "B_00111100_B",
"\xbc", "B_10111100_B",
"\x7c", "B_01111100_B",
"\xfc", "B_11111100_B",
"\x02", "B_00000010_B",
"\x82", "B_10000010_B",
"\x42", "B_01000010_B",
"\xc2", "B_11000010_B",
"\x22", "B_00100010_B",
"\xa2", "B_10100010_B",
"\x62", "B_01100010_B",
"\xe2", "B_11100010_B",
"\x12", "B_00010010_B",
"\x92", "B_10010010_B",
"\x52", "B_01010010_B",
"\xd2", "B_11010010_B",
"\x32", "B_00110010_B",
"\xb2", "B_10110010_B",
"\x72", "B_01110010_B",
"\xf2", "B_11110010_B",
"\x0a", "B_00001010_B",
"\x8a", "B_10001010_B",
"\x4a", "B_01001010_B",
"\xca", "B_11001010_B",
"\x2a", "B_00101010_B",
"\xaa", "B_10101010_B",
"\x6a", "B_01101010_B",
"\xea", "B_11101010_B",
"\x1a", "B_00011010_B",
"\x9a", "B_10011010_B",
"\x5a", "B_01011010_B",
"\xda", "B_11011010_B",
"\x3a", "B_00111010_B",
"\xba", "B_10111010_B",
"\x7a", "B_01111010_B",
"\xfa", "B_11111010_B",
"\x06", "B_00000110_B",
"\x86", "B_10000110_B",
"\x46", "B_01000110_B",
"\xc6", "B_11000110_B",
"\x26", "B_00100110_B",
"\xa6", "B_10100110_B",
"\x66", "B_01100110_B",
"\xe6", "B_11100110_B",
"\x16", "B_00010110_B",
"\x96", "B_10010110_B",
"\x56", "B_01010110_B",
"\xd6", "B_11010110_B",
"\x36", "B_00110110_B",
"\xb6", "B_10110110_B",
"\x76", "B_01110110_B",
"\xf6", "B_11110110_B",
"\x0e", "B_00001110_B",
"\x8e", "B_10001110_B",
"\x4e", "B_01001110_B",
"\xce", "B_11001110_B",
"\x2e", "B_00101110_B",
"\xae", "B_10101110_B",
"\x6e", "B_01101110_B",
"\xee", "B_11101110_B",
"\x1e", "B_00011110_B",
"\x9e", "B_10011110_B",
"\x5e", "B_01011110_B",
"\xde", "B_11011110_B",
"\x3e", "B_00111110_B",
"\xbe", "B_10111110_B",
"\x7e", "B_01111110_B",
"\xfe", "B_11111110_B",
"\x01", "B_00000001_B",
"\x81", "B_10000001_B",
"\x41", "B_01000001_B",
"\xc1", "B_11000001_B",
"\x21", "B_00100001_B",
"\xa1", "B_10100001_B",
"\x61", "B_01100001_B",
"\xe1", "B_11100001_B",
"\x11", "B_00010001_B",
"\x91", "B_10010001_B",
"\x51", "B_01010001_B",
"\xd1", "B_11010001_B",
"\x31", "B_00110001_B",
"\xb1", "B_10110001_B",
"\x71", "B_01110001_B",
"\xf1", "B_11110001_B",
"\x09", "B_00001001_B",
"\x89", "B_10001001_B",
"\x49", "B_01001001_B",
"\xc9", "B_11001001_B",
"\x29", "B_00101001_B",
"\xa9", "B_10101001_B",
"\x69", "B_01101001_B",
"\xe9", "B_11101001_B",
"\x19", "B_00011001_B",
"\x99", "B_10011001_B",
"\x59", "B_01011001_B",
"\xd9", "B_11011001_B",
"\x39", "B_00111001_B",
"\xb9", "B_10111001_B",
"\x79", "B_01111001_B",
"\xf9", "B_11111001_B",
"\x05", "B_00000101_B",
"\x85", "B_10000101_B",
"\x45", "B_01000101_B",
"\xc5", "B_11000101_B",
"\x25", "B_00100101_B",
"\xa5", "B_10100101_B",
"\x65", "B_01100101_B",
"\xe5", "B_11100101_B",
"\x15", "B_00010101_B",
"\x95", "B_10010101_B",
"\x55", "B_01010101_B",
"\xd5", "B_11010101_B",
"\x35", "B_00110101_B",
"\xb5", "B_10110101_B",
"\x75", "B_01110101_B",
"\xf5", "B_11110101_B",
"\x0d", "B_00001101_B",
"\x8d", "B_10001101_B",
"\x4d", "B_01001101_B",
"\xcd", "B_11001101_B",
"\x2d", "B_00101101_B",
"\xad", "B_10101101_B",
"\x6d", "B_01101101_B",
"\xed", "B_11101101_B",
"\x1d", "B_00011101_B",
"\x9d", "B_10011101_B",
"\x5d", "B_01011101_B",
"\xdd", "B_11011101_B",
"\x3d", "B_00111101_B",
"\xbd", "B_10111101_B",
"\x7d", "B_01111101_B",
"\xfd", "B_11111101_B",
"\x03", "B_00000011_B",
"\x83", "B_10000011_B",
"\x43", "B_01000011_B",
"\xc3", "B_11000011_B",
"\x23", "B_00100011_B",
"\xa3", "B_10100011_B",
"\x63", "B_01100011_B",
"\xe3", "B_11100011_B",
"\x13", "B_00010011_B",
"\x93", "B_10010011_B",
"\x53", "B_01010011_B",
"\xd3", "B_11010011_B",
"\x33", "B_00110011_B",
"\xb3", "B_10110011_B",
"\x73", "B_01110011_B",
"\xf3", "B_11110011_B",
"\x0b", "B_00001011_B",
"\x8b", "B_10001011_B",
"\x4b", "B_01001011_B",
"\xcb", "B_11001011_B",
"\x2b", "B_00101011_B",
"\xab", "B_10101011_B",
"\x6b", "B_01101011_B",
"\xeb", "B_11101011_B",
"\x1b", "B_00011011_B",
"\x9b", "B_10011011_B",
"\x5b", "B_01011011_B",
"\xdb", "B_11011011_B",
"\x3b", "B_00111011_B",
"\xbb", "B_10111011_B",
"\x7b", "B_01111011_B",
"\xfb", "B_11111011_B",
"\x07", "B_00000111_B",
"\x87", "B_10000111_B",
"\x47", "B_01000111_B",
"\xc7", "B_11000111_B",
"\x27", "B_00100111_B",
"\xa7", "B_10100111_B",
"\x67", "B_01100111_B",
"\xe7", "B_11100111_B",
"\x17", "B_00010111_B",
"\x97", "B_10010111_B",
"\x57", "B_01010111_B",
"\xd7", "B_11010111_B",
"\x37", "B_00110111_B",
"\xb7", "B_10110111_B",
"\x77", "B_01110111_B",
"\xf7", "B_11110111_B",
"\x0f", "B_00001111_B",
"\x8f", "B_10001111_B",
"\x4f", "B_01001111_B",
"\xcf", "B_11001111_B",
"\x2f", "B_00101111_B",
"\xaf", "B_10101111_B",
"\x6f", "B_01101111_B",
"\xef", "B_11101111_B",
"\x1f", "B_00011111_B",
"\x9f", "B_10011111_B",
"\x5f", "B_01011111_B",
"\xdf", "B_11011111_B",
"\x3f", "B_00111111_B",
"\xbf", "B_10111111_B",
"\x7f", "B_01111111_B",
"\xff", "B_11111111_B",
);

my @fontfiles=glob("/usr/share/syscons/fonts/*.fnt");
$decoder = new MIME::Decoder 'x-uuencode' or die "unsupported";

my $fonts=0;
foreach my $fontfile (@fontfiles) {
	my $width,$height;
	my $decoded=`uudecode -o /dev/stdout $fontfile`;
	my $bytes=length($decoded);
	my $fname=$fontfile;
	$fname =~ s/\.fnt$//;
	$fname =~ s/^.*\///;
	print "char $fname\[$bytes\] = {\n";
	if($fname =~ /([0-9]+)x([0-9]+)/) {
		$width=$1;
		$height=$2;
	}

	my $lines=0;
	while(length($decoded)) {
		my $ch=substr($decoded,0,1);
		$decoded=substr($decoded,1);
		my $val=ord($ch);

		print "\t$chars{chr($val)}\n";
		$lines++;
		if($height && !($lines % $height)) {
			print "\n";
		}
	}
	print "};\n\n";
	$fonts++;
}

open IN, "< /usr/share/syscons/fonts/INDEX.fonts";
my %fonts;
my %fontsizes;
while (<IN>) {
	next if(/^\s*#/);
	chomp;
	my ($filename, $lang, $desc) = split(/:/);
	next unless ($lang eq 'en');
	next if ($filename !~ /\.fnt$/);
	$filename =~ s/\..*?$//;
	$filename =~ s/-(8x[0-9]*)$//;
	if($1 eq '8x16') {
		$fontsizes{$filename} |=1;
	}
	elsif($1 eq '8x14') {
		$fontsizes{$filename} |=2;
	}
	elsif($1 eq '8x8') {
		$fontsizes{$filename} |=4;
	}
	else {
		print STDERR "Unknown font size: $1\n";
	}
	$desc =~ s/"/\\"/g;
	$desc =~ s/\s+8x[0-9]*//g;
	$fonts{$filename}=$desc;
}
close IN;
print "struct font_names fnames[$fonts] = {\n";
foreach my $font (keys %fonts) {
	print "\t,{$font, \"$fonts{$font}\", $fontsizes{$font}}\n";
}
print "};\n";
