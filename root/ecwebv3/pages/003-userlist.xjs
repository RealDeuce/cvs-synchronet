<!--User List-->

<?xjs
	
	// Uncomment/comment properties below to enable/disable list columns
	var columns = {
//		number : { name : "#", type : "number" },
		alias : { name : "Alias", type : "string" },
//		name : { name : "Name", type : "string" },
//		age : { name : "Age", type : "number" },
//		gender : { name : "Sex", type : "string" },
		location : { name : "Location", type : "string" },
		laston_date : { name : "Last On", type : "date" },
		connection : { name : "Via", type : "string" },
//		firston_date : { name : "First On", type : "date" },
//		total_logons : { name : "Calls", type : "number" },
//		total_posts : { name : "Posts", type : "number" }
	};

	// Most people won't need to edit below this line
	load("sbbsdefs.js");

	var users = [];
	var url = format(
		"http://%s%s",
		http_request.host,
		http_request.request_string.split("&")[0]
	);
	
	var sortUser = function(a, b, sortOrder, type) {
		if(type == "string") {
			a = a.toUpperCase();
			b = b.toUpperCase();
			ret =	(a < b)
					?
					((sortOrder == "ascending") ? 1 : -1)
					:
					(	(a > b)
						?
						((sortOrder == "ascending") ? -1 : 1)
						:
						0
					);
		} else if(type == "number" || type == "date") {
			ret =	(a < b)
					?
					((sortOrder == "ascending") ? -1 : 1)
					:
					(	(a > b)
						?
						((sortOrder == "ascending") ? 1 : -1)
						:
						0
					);
		}
		return ret;
	}

	var sortUsers = function(a, b) {
		var ret = 0;
		if(	typeof http_request.query.sortby != "undefined"
			&&
			typeof http_request.query.sortorder != "undefined"
			&&
			(	http_request.query.sortorder == "ascending"
				||
				http_request.query.sortorder == "descending"
			)
		) {
			var sortBy = http_request.query.sortby.toString().toLowerCase();
			var sortOrder = http_request.query.sortorder.toString().toLowerCase();
			for(var c in columns) {
				if(sortBy != c)
					continue;
				ret = sortUser(a[c], b[c], sortOrder, columns[c].type);
				break;
			}
		}
		return ret;
	}
	
	var makeSortURLs = function(field, order) {
		return format(
			'<a class="ulLink" href="%s&sortby=%s&sortorder=ascending">'
			+ '<img src="./icons/up-arrow.png">'
			+ '</a>'
			+ '<a class="ulLink" href="%s&sortby=%s&sortorder=descending">'
			+ '<img src="./icons/down-arrow.png">'
			+ '</a>',
			url,
			field,
			url,
			field
		);
	}
	
	var copyProperties = function(source, dest) {
		for(var property in source) {
			if(typeof source[property] == "string" || typeof source[property] == "number")
				dest[property] = source[property];
		}
		return dest;
	}

	for(var u = 1; u < system.lastuser; u++) {
		var usr1 = new User(u);
		var usr2 = copyProperties(usr1, {});
		usr2 = copyProperties(usr1.stats, usr2);	
		users.push(usr2);
	}
	users.sort(sortUsers);
	
?>

<span class="title">User List</span>
<table class="font" style="clear: both; margin: 0;">
<tr>
<?xjs
	for(var c in columns)
		print(format("<td>%s %s</td>", columns[c].name, makeSortURLs(c)));
?>
</tr>

<?xjs

for(var u = 0; u < users.length; u++) {
	print(format("<tr class='%s'>", (u % 2 == 0) ? "row1" : "row2"));
	for(var c in columns) {
		print(
			format(
				"<td>%s</td>",
				(columns[c].type == "date") ? system.timestr(users[u][c]) : users[u][c].toString()
			)
		);
	}
	print("</tr>");
}

?>
</table>
