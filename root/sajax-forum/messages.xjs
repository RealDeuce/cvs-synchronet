<?xjs
load("sbbsdefs.js");
load(cwd+"functions.js");
var sub_code=http_request.query.sub_code[0];
var msg_number=NaN;
if(http_request.query.msg_number!=undefined)
	msg_number=parseInt(http_request.query.msg_number[0]);
// Load the index
var moderated=msg_area.sub[sub_code].is_moderated;

var headers=new Object();
var start=system.timer;
var msgbase=new MsgBase(sub_code);
var top_level=new Array();
if(msg_area.sub[sub_code].index!=-1)
	msgbase.open();

/* First, read ALL headers that may be affect this display */
if(isNaN(msg_number)) {
	for(i=0; i<msgbase.total_msgs; i++) {
		var hdr=msgbase.get_msg_header(true, i, false /* Big speedup */);
		if(hdr==null)
			continue;
		if(moderated && (hdr.attr & MSG_VALIDATED) == 0)
			continue;
		if(hdr.attr & (MSG_PRIVATE|MSG_DELETE))
			continue;
		headers[hdr.number]=hdr;
		if(hdr.thread_back==0)
			top_level.push(hdr.number);
		else {
			/* Handle deleted top level message threads */
			if((hdr.thread_back < hdr.number) && headers[hdr.thread_back]==undefined)
				top_level.push(hdr.number);
		}
	}

}
else {
	var top_msg=msg_number;
	var hdr=msgbase.get_msg_header(msg_number, false /* Big speedup */);

	msg_number=hdr.thread_first;

	/* Depth-first traversal of replies */
	while(msg_number && msg_number!=top_msg) {
		hdr=headers[msg_number];
		if(hdr==undefined) {
			hdr=msgbase.get_msg_header(msg_number, false /* Big speedup */);
			if(hdr==null)
				break;
			if(moderated && (hdr.attr & MSG_VALIDATED) == 0)
				continue;
			if(hdr.attr & (MSG_PRIVATE|MSG_DELETE))
				continue;
			if(hdr.thread_back==top_msg)
				top_level.push(hdr.number);
			headers[hdr.number]=hdr;
			if(hdr.thread_first) {
				msg_number=hdr.thread_first;
				continue;
			}
		}
		if(hdr.thread_next)
			msg_number=hdr.thread_next;
		else
			msg_number=hdr.thread_back;
	}
}

/* Now, do a reply count and new flag for every header */
var reply_count=new Object();
var new_stats=new Object();
for(i in top_level) {
	var moved_back=false;
	var top_msg=top_level[i];
	reply_count[top_msg]=0;
	new_stats[top_msg]=new Object();
	if(headers[top_msg].number > msg_area.sub[sub_code].scan_ptr)
		new_stats[top_msg].is_new=true;
	else
		new_stats[top_msg].is_new=false;
	new_stats[top_msg].inherit_new=false;
	new_stats[top_msg].newest_reply=0;
	new_stats[top_msg].date_sort=headers[top_msg].when_written_time;
	var parents=new Array();
	parents.push(top_msg);

	msg_number=headers[top_msg].thread_first;
	while(msg_number && msg_number != top_msg) {
		var hdr=headers[msg_number];
		if(hdr==undefined)
			break;
		if(!moved_back) {
			/* This is a new thinger... update stuff based on it */
			reply_count[msg_number]=0;
			new_stats[msg_number]=new Object();
			if(headers[msg_number].number > msg_area.sub[sub_code].scan_ptr)
				new_stats[msg_number].is_new=true;
			else
				new_stats[msg_number].is_new=false;
			new_stats[msg_number].inherit_new=false;
			new_stats[msg_number].newest_reply=0;
			new_stats[msg_number].date_sort=headers[msg_number].when_written_time;

			for(i in parents) {
				var top_msg=parents[i];
				reply_count[top_msg]++;
				if(hdr.when_written_time > new_stats[top_msg].newest_reply)
					new_stats[top_msg].newest_reply = hdr.when_written_time;
				if(hdr.when_written_time > new_stats[top_msg].date_sort)
					new_stats[top_msg].date_sort = hdr.when_written_time;
				if(hdr.number > msg_area.sub[sub_code].scan_ptr)
					new_stats[top_msg].inherit_new=true;
			}
			if(hdr.thread_first) {
				parents.push(msg_number);
				msg_number=hdr.thread_first;
				continue;
			}
		}
		if(hdr.thread_next) {
			msg_number=hdr.thread_next;
			moved_back=false;
			continue;
		}

		msg_number=hdr.thread_back;
		parents.pop();
		moved_back=true;
	}
}

top_level=top_level.sort(function(a,b) {
	return(new_stats[b].date_sort - new_stats[a].date_sort);
});

write("Scan Ptr: "+msg_area.sub[sub_code].scan_ptr+"<br>");
// Output messages... 
for(i in top_level) {
	msg_number=top_level[i];
	/* This xjs_load() is recursive!  Whee! */
	xjs_load('message_display.xjs');
}
?>
<?xjs
// Close the message base
msgbase.close();
?>
