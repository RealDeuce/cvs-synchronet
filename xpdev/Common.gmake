# Available Options:
# NEED_THREADS		= Set flags suitable for threaded programs

# Set DEBUG
ifndef DEBUG
 ifndef RELEASE
  DEBUG	:=	1
 endif
endif

# VERBOSE/QUITE
ifndef VERBOSE
 QUIET	=	@
endif

# Compiler-specific options
CFLAGS	+=	-MMD
CCPRE	?=	gcc
ifdef BUILD_DEPENDS
 CC	=	$(XPDEV)../build/mkdep -a
 CXX	=	$(XPDEV)../build/mkdep -a
 LD	=	echo
 COMPILE_MSG	:= Depending
else
 CC	?=	gcc
 CXX	?=	g++
 LD	?=	ld
 COMPILE_MSG	:= Compiling
endif

SLASH	=	/
OFILE	=	o

ifdef DEBUG
 BUILD	=	debug
else
 BUILD	=	release
endif
BUILDPATH	?=	$(BUILD)

# Get OS
ifndef os
 os		=	$(shell uname)
endif
os      :=	$(shell echo $(os) | tr "[A-Z]" "[a-z]")

LIBODIR :=	$(CCPRE).$(os).lib.$(BUILDPATH)
EXEODIR :=	$(CCPRE).$(os).exe.$(BUILDPATH)
LDFLAGS	+=	-L$(LIBODIR)

ifeq ($(os),netbsd)
 DELETE :=	rm -f
else
 ifeq ($(os),openbsd)
  DELETE :=	rm -f
 else
  ifeq ($(os),sunos)
   DELETE :=	rm -f
  else
   DELETE	=	rm -fv
  endif
 endif
endif

EXEFILE	:=

ifeq ($(os),openbsd)
LIBFILE =	.so.0.0
else
 ifeq ($(os),darwin)
  LIBFILE =	.dylib
 else
  LIBFILE	=	.so
 endif
endif
LIBPREFIX =	lib

# OS Specific Flags
ifeq ($(os),sunos)    # Solaris
 CFLAGS	+= -D__solaris__ -DNEEDS_DAEMON -DNEEDS_FORKPTY
endif
ifeq ($(os),netbsd)	# NetBSD
 CFLAGS	+=	-D__unix__ -I/usr/pkg/include -I/usr/pkg/pthreads/include -DNEEDS_FORKPTY
endif
ifeq ($(os),darwin)
 CFLAGS +=  -D__unix__ -fno-common -D__DARWIN__
 LDFLAGS +=  -lm
endif

# PThread-specific flags
ifeq ($(os),linux)    # Linux
 ifndef THREADS_ACTUALLY_WORK
  PTHREAD_CFLAGS    += -D_THREAD_SUID_BROKEN
 endif
endif
PTHREAD_CFLAGS    += -D_THREAD_SAFE -D_REENTRANT
ifeq ($(os),freebsd)    # FreeBSD
 PTHREAD_CFLAGS    += -DUSE_XP_SEMAPHORES
 PTHREAD_LDFLAGS    +=    -pthread
 XP_SEM    :=    1
else
 ifeq ($(os),openbsd)    # OpenBSD
  PTHREAD_CFLAGS    += -DUSE_XP_SEMAPHORES
  PTHREAD_LDFLAGS    +=    -pthread
  XP_SEM    :=    1
 else
  ifeq ($(os),netbsd)    # NetBSD
   PTHREAD_CFLAGS    += -D__unix__ -DUSE_XP_SEMAPHORES
   PTHREAD_LDFLAGS    +=    -L/usr/pkg/lib -L/usr/pkg/pthreads/lib -lpthread
   XP_SEM    :=    1
  else
   ifeq ($(os),qnx)    # QNX
   else
    ifeq ($(os),darwin)    # Darwin/Mac OS X
     PTHREAD_CFLAGS    += -D__unix__ -DUSE_XP_SEMAPHORES -D__DARWIN__
     PTHREAD_LDFLAGS    += -lpthread
     XP_SEM    := 1
    else
     ifeq ($(os),sunos)  # Solaris
      XP_SEM :=    1
      PTHREAD_CFLAGS    +=    -D_POSIX_PTHREAD_SEMANTICS
      PTHREAD_CFLAGS    += -DUSE_XP_SEMAPHORES
      PTHREAD_LDFLAGS    +=    -lpthread
     else            # Linux / Other UNIX
      XP_SEM :=    1
      PTHREAD_CFLAGS    += -DUSE_XP_SEMAPHORES
      PTHREAD_LDFLAGS    +=    -lpthread
     endif
    endif
   endif
  endif
 endif
endif

ifdef DEBUG
 CFLAGS	+=	-ggdb
 CFLAGS	+=	-D_DEBUG
 ODIR	:=	$(ODIR).debug
else # RELEASE
 CFLAGS	:= -O3 $(CFLAGS)
 ODIR	:=	$(ODIR).release
endif

vpath %.c $(XPDEV)

CFLAGS	+=	-I$(XPDEV)

-include targets.mk
-include $(XPDEV)rules.mk
-include objects.mk		# defines $(OBJS)
ifdef XP_SEM
 PTHREAD_OBJS	+= $(LIBODIR)$(SLASH)xpsem.$(OFILE)
endif

ifdef NEED_THREADS
 CFLAGS += $(PTHREAD_CFLAGS)
 LDFLAGS	+= $(PTHREAD_LDFLAGS)
 OBJS	+= $(PTHREAD_OBJS)
endif

depend:
	$(QUIET)$(DELETE) $(LIBODIR)/.depend
	$(QUIET)$(DELETE) $(EXEODIR)/.depend
	$(QUIET)$(MAKE) BUILD_DEPENDS=FORCE

FORCE:

-include $(LIBODIR)/.depend
-include $(EXEODIR)/.depend
-include $(LIBODIR)/*.d
-include $(EXEODIR)/*.d
