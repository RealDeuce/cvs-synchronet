# Makefile.bor

#########################################################################
# Makefile for Synchronet BBS Configuration Utility (SCFG)				#
# For use with Borland C++ Builder 5+ or Borland C++ 5.5 for Win32      #
# @format.tab-size 4													#
#																		#
# usage: make -f makefile.bor											#
#########################################################################

# $Id$

# Macros
DEBUG	=	1				# Comment out for release (non-debug) version
CC		=	bcc32
LD		=	ilink32
SLASH	=	\\
OFILE	=	obj
EXEFILE	=	.exe
EXEODIR =	bcc.win32.exe	# Executable output directory
LIBODIR =	bcc.win32.lib
SBBSLIBODIR = $(LIBODIR)
UIFCLIBODIR = $(LIBODIR)
CFLAGS	=	-M -I..;..\..\uifc -g1
DELETE	=	echo y | del 

# Optional compile flags (disable banner, warnings and such)
CFLAGS	=	$(CFLAGS) -q -d -H -X- -w-csu -w-pch -w-ccc -w-rch -w-par -w-pro

# Debug or release build?
!ifdef DEBUG
CFLAGS	=	$(CFLAGS) -v -Od -D_DEBUG 
LFLAGS	=	$(LFLAGS) -v
LIBODIR =	$(LIBODIR).debug
EXEODIR	=	$(EXEODIR).debug
!else
LIBODIR =	$(LIBODIR).release
EXEODIR	=	$(EXEODIR).release
!endif

# Cross platform/compiler definitions
!include targets.mak	# defines all targets
!include objects.mak	# defines $(OBJS)
!include headers.mak	# defines $(HEADERS)

OBJS = $(OBJS) $(LIBODIR)\uifc.$(OFILE)

# Implicit C Compile Rule for SCFG
{.}.c.$(OFILE):
	@echo Compiling (I) $< to $@ ...
	$(CC) $(CFLAGS) -n$(LIBODIR) -c $<

$(LIBODIR)\ars.$(OFILE): ..\ars.c
	$(CC) $(CFLAGS) -n$(LIBODIR) -c $?

$(LIBODIR)\crc32.$(OFILE): ..\crc32.c
	$(CC) $(CFLAGS) -n$(LIBODIR) -c $?

$(LIBODIR)\date_str.$(OFILE): ..\date_str.c
	$(CC) $(CFLAGS) -n$(LIBODIR) -c $?

$(LIBODIR)\load_cfg.$(OFILE): ..\load_cfg.c
	$(CC) $(CFLAGS) -n$(LIBODIR) -c $?

$(LIBODIR)\misc.$(OFILE): ..\misc.c
	$(CC) $(CFLAGS) -n$(LIBODIR) -c $?

$(LIBODIR)\scfgsave.$(OFILE): ..\scfgsave.c
	$(CC) $(CFLAGS) -n$(LIBODIR) -c $?

$(LIBODIR)\scfglib1.$(OFILE): ..\scfglib1.c
	$(CC) $(CFLAGS) -n$(LIBODIR) -c $?

$(LIBODIR)\scfglib2.$(OFILE): ..\scfglib2.c
	$(CC) $(CFLAGS) -n$(LIBODIR) -c $?

$(LIBODIR)\smblib.$(OFILE): ..\smblib.c
	$(CC) $(CFLAGS) -n$(LIBODIR) -c $?

$(LIBODIR)\smbwrap.$(OFILE): ..\smbwrap.c
	$(CC) $(CFLAGS) -n$(LIBODIR) -c $?

$(LIBODIR)\userdat.$(OFILE): ..\userdat.c
	$(CC) $(CFLAGS) -n$(LIBODIR) -c $?

$(LIBODIR)\wrappers.$(OFILE): ..\wrappers.c
	$(CC) $(CFLAGS) -n$(LIBODIR) -c $?

$(LIBODIR)\uifc.$(OFILE): ..\..\uifc\uifc.c
	$(CC) $(CFLAGS) -n$(LIBODIR) -c $?

$(LIBODIR)\uifcx.$(OFILE): ..\..\uifc\uifcx.c
	$(CC) $(CFLAGS) -n$(LIBODIR) -c $?

# Create output directories if they don't exist
$(LIBODIR):
	@if not exist $(LIBODIR) mkdir $(LIBODIR)
$(EXEODIR):
	@if not exist $(EXEODIR) mkdir $(EXEODIR)

makehelp.exe: makehelp.c
	$(CC) $?

$(SCFGHELP): $(OBJS) makehelp.exe
	makehelp $(EXEODIR)

# Monolithic SCFG executable Build Rule
$(SCFG): $(OBJS) 
	$(CC) $(CFLAGS) -e$(SCFG) $**

!include depends.mak	# defines dependencies